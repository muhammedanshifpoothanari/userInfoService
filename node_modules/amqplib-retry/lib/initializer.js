'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}var config=require('./config');var Promise=require('bluebird');var Initializer=function(){function Initializer(channel,clientQueueName,failureQueueName){_classCallCheck(this,Initializer);this.channel=channel;this.clientQueueName=clientQueueName;this.failureQueueName=failureQueueName}_createClass(Initializer,[{key:'initialize',value:function initialize(){var self=this;return Promise.try(function(){return Promise.all([self.channel.assertQueue(config.delayQueueName,{durable:true,arguments:{'x-dead-letter-exchange':config.exchangeName,'x-dead-letter-routing-key':config.readyRouteKey}}),self.channel.assertQueue(config.readyQueueName,{durable:true}),self.channel.checkQueue(self.clientQueueName),self.channel.checkQueue(self.failureQueueName),self.channel.assertExchange(config.exchangeName,'direct',{durable:true})])}).then(function(){return self.channel.bindQueue(config.readyQueueName,config.exchangeName,config.readyRouteKey)}).then(function(){self.isInitialized=true})}}]);return Initializer}();module.exports=Initializer;
//# sourceMappingURL=initializer.js.map